{"version":3,"sources":["utils/colors.ts","utils/themes.ts","utils/typography.ts","utils/common.ts","utils/css.ts","components/GlobalStyles.tsx","components/StyleAndThemeProvider.tsx","components/Providers.tsx","pages/home/LoginForm.tsx","assets/Illustration/index.ts","assets/Illustration/login.svg","pages/home/Home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["colors","purple","100","200","300","black","themes","dark","backgroundDark","background","backgroundLight","primaryDark","primary","primaryLight","typeScale","isKeyOf","key","obj","theme","title1","title2","cssVariables","cvar","Error","GlobalStyles","style","css","styles","jss","create","plugins","jssPreset","rtl","createMuiTheme","direction","StyleAndThemeProvider","children","StylesProvider","ThemeProvider","Providers","maxSnack","dir","className","initialValue","phoneNumber","password","errorMessages","lengh","required","regex","formSchema","yup","length","matches","Form","styled","form","InputBox","div","PhoneIcon","Phone","LockIcon","Lock","Input","TextField","SubmitButton","Button","LoginForm","useForm","mode","defaultValues","resolver","yupResolver","handleSubmit","register","errors","useSnackbar","enqueueSnackbar","closeSnackbar","notificationKey","useRef","useEffect","displayErrors","Object","values","phoneNumberError","message","passwordError","notifyError","current","error","variant","anchorOrigin","vertical","horizontal","persist","onSubmit","data","console","log","fontSize","inputRef","name","label","type","Box","my","href","undefined","illustration","Login","Container","HeadImage","img","Home","src","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a105643f.chunk.js","sourcesContent":["const black = {\n    100: \"#121212\",\n    200: \"#1f1f1f\",\n    300: \"#333333\",\n}\n\nconst purple = {\n    100: \"#732991\",\n    200: \"#963dbf\",\n    300: \"#ca6ef2\",\n}\n\nconst colors = {\n    purple,\n    black\n}\n\nexport default colors;","import colors from \"./colors\"\n\nconst dark = {\n    backgroundDark: colors.black[100],\n    background: colors.black[200],\n    backgroundLight: colors.black[300],\n    primaryDark: colors.purple[100],\n    primary: colors.purple[200],\n    primaryLight: colors.purple[300],\n}\n\nexport const themes = {\n    dark\n}","export const primaryFont='\"Roboto\", \"Helvetica\", \"Arial\", sans-serif';\n\nexport const typeScale = {\n    title1: \"1.8rem\",\n    title2: \"1.6rem\",\n}","export function isKeyOf<T>(key: any, obj: T): key is keyof T {\n    return key in obj;\n}","import {isKeyOf} from \"./common\";\n\nconst theme = {\n    background: \"--background\",\n    primaryDark: \"--primary-dark\",\n    primary: \"--primary\",\n    primaryLight: \"--primary-light\",\n}\n\nconst typeScale = {\n    title1: \"--title1\",\n    title2: \"--title2\",\n}\n\nexport const cssVariables = {\n    theme,\n    typeScale\n}\n\ntype themeKeys = keyof typeof theme;\ntype typeScaleKeys = keyof typeof typeScale;\ntype cssVariableKeys = themeKeys | typeScaleKeys;\n\nexport function cvar(key: themeKeys): string;\nexport function cvar(key: typeScaleKeys): string;\nexport function cvar<T>(key: cssVariableKeys): string {\n    if (isKeyOf(key, theme)) {\n        return `var(${theme[key]})`;\n    }\n    if (isKeyOf(key, typeScale)) {\n        return `var(${typeScale[key]})`;\n    }\n    throw new Error(\"Invalid key\");\n}","import {Global, css} from '@emotion/react'\r\nimport {cssVariables, primaryFont, themes, typeScale} from \"../utils\"\r\n\r\nexport function GlobalStyles() {\r\n    const style = css`\r\n      * {\r\n        margin: 0;\r\n        padding: 0;\r\n        box-sizing: border-box;\r\n      }\r\n\r\n      html, body {\r\n        font-size: 10px;\r\n        font-family: ${primaryFont};\r\n        ${cssVariables.theme.background}: ${themes.dark.background};\r\n        ${cssVariables.theme.primaryDark}: ${themes.dark.primaryDark};\r\n        ${cssVariables.theme.primary}: ${themes.dark.primary};\r\n        ${cssVariables.theme.primaryLight}: ${themes.dark.primaryLight};\r\n        ${cssVariables.typeScale.title1}: ${typeScale.title1};\r\n        ${cssVariables.typeScale.title2}: ${typeScale.title2};\r\n      }\r\n\r\n      a {\r\n        text-decoration: none;\r\n      }\r\n\r\n      button {\r\n        outline: none;\r\n        border: none;\r\n      }\r\n\r\n      input::-webkit-outer-spin-button,\r\n      input::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n      }\r\n\r\n      input[type=number] {\r\n        -moz-appearance: textfield;\r\n      }\r\n      \r\n      .notification.notification{\r\n        font-size: ${typeScale.title2};\r\n      }\r\n    `;\r\n\r\n    return <Global styles={style}/>\r\n}\r\n","import React, {FunctionComponent} from 'react';\nimport {create} from \"jss\";\nimport {createMuiTheme, jssPreset, StylesProvider, ThemeProvider} from \"@material-ui/core/styles\";\nimport rtl from \"jss-rtl\";\n\nconst jss = create({plugins: [...jssPreset().plugins, rtl()]});\nconst theme = createMuiTheme({direction: \"rtl\"});\n\nconst StyleAndThemeProvider: FunctionComponent = ({children}) => {\n    return (\n        <StylesProvider jss={jss}>\n            <ThemeProvider theme={theme}>\n                {children}\n            </ThemeProvider>\n        </StylesProvider>\n\n    );\n}\n\nexport default StyleAndThemeProvider;","import React, {FunctionComponent} from 'react';\r\nimport StyleAndThemeProvider from \"./StyleAndThemeProvider\";\r\nimport {SnackbarProvider} from \"notistack\";\r\n\r\nexport const Providers: FunctionComponent = ({children}) => {\r\n    return (\r\n        <StyleAndThemeProvider>\r\n            <SnackbarProvider maxSnack={1} dir=\"rtl\" className=\"notification\">\r\n            {children}\r\n            </SnackbarProvider>\r\n        </StyleAndThemeProvider>\r\n    );\r\n};","import React, {useEffect, useRef} from 'react';\r\nimport styled from \"@emotion/styled\";\r\nimport {Box, Button, TextField} from \"@material-ui/core\";\r\nimport {cvar} from \"../../utils\";\r\nimport {useForm} from \"react-hook-form\";\r\nimport * as yup from 'yup';\r\nimport {yupResolver} from \"@hookform/resolvers/yup\";\r\nimport {Lock, Phone} from \"@material-ui/icons\";\r\nimport {SnackbarKey, useSnackbar} from 'notistack';\r\n\r\n\r\nconst initialValue = {\r\n    phoneNumber: \"\",\r\n    password: \"\",\r\n}\r\nconst errorMessages = {\r\n    phoneNumber: {\r\n        lengh: \"شماره تلفن باید 11 رقم باشد\",\r\n        required: \"شماره تلفن وارد نشده است.\",\r\n    },\r\n    password: {\r\n        regex: \"رمز عبور باید حداقل 6 کارکتر شامل حداقل 1 حرف و 1 عدد باشد\",\r\n        required: \"رمز عبور وارد نشده است.\",\r\n    }\r\n}\r\n// 6 Characters, at least one letter and one number.\r\nconst passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{6,}$/;\r\nconst formSchema = yup.object({\r\n    phoneNumber: yup.string().length(11, errorMessages.phoneNumber.lengh).required(errorMessages.phoneNumber.required),\r\n    password: yup.string().matches(passwordRegex, errorMessages.password.regex).required(errorMessages.password.required),\r\n});\r\n\r\nfunction LoginForm() {\r\n\r\n    const {handleSubmit, register, errors} = useForm({\r\n        mode: \"onBlur\",\r\n        defaultValues: initialValue,\r\n        resolver: yupResolver(formSchema)\r\n    });\r\n    const {enqueueSnackbar, closeSnackbar} = useSnackbar()\r\n\r\n    const notificationKey = useRef<SnackbarKey>();\r\n    useEffect(() => {\r\n        displayErrors();\r\n    }, [Object.values(errors)])\r\n\r\n    const displayErrors = () => {\r\n        const phoneNumberError = errors.phoneNumber && errors.phoneNumber.message\r\n        const passwordError = errors.password && errors.password.message\r\n        if (phoneNumberError)\r\n            notifyError(phoneNumberError);\r\n        else if (passwordError)\r\n            notifyError(passwordError);\r\n        else\r\n            closeSnackbar(notificationKey.current);\r\n    }\r\n\r\n    const notifyError = (error: string) => {\r\n        notificationKey.current = enqueueSnackbar(error, {\r\n            variant: \"error\",\r\n            anchorOrigin: {\r\n                vertical: \"top\",\r\n                horizontal: \"center\"\r\n            },\r\n            persist: true\r\n        });\r\n    }\r\n\r\n    const onSubmit = (data: any) => {\r\n        // TODO: Send Login Request\r\n        console.log(data)\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n            <InputBox>\r\n                <PhoneIcon fontSize=\"large\"/>\r\n                <Input inputRef={register} name=\"phoneNumber\" label=\"شماره تلفن\" type=\"number\" dir=\"rtl\"/>\r\n            </InputBox>\r\n            <Box my=\"2rem\"/>\r\n            <InputBox>\r\n                <LockIcon fontSize=\"large\"/>\r\n                <Input inputRef={register} name=\"password\" label=\"رمز عبور\" type=\"password\" dir=\"rtl\"/>\r\n            </InputBox>\r\n            <Box my=\"3rem\"/>\r\n            <SubmitButton href={undefined} type=\"submit\" variant=\"outlined\">\r\n                ورود\r\n            </SubmitButton>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`\r\nconst InputBox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: flex-end;\r\n`\r\nconst PhoneIcon = styled(Phone)`\r\n  color: ${cvar(\"primary\")};\r\n`\r\nconst LockIcon = styled(Lock)`\r\n  color: ${cvar(\"primary\")};\r\n`\r\nconst Input = styled(TextField)`\r\n  input {\r\n    font-size: ${cvar(\"title2\")};\r\n    text-align: center;\r\n    direction: ltr;\r\n  }\r\n\r\n  && label {\r\n    font-size: ${cvar(\"title1\")};\r\n    color: ${cvar(\"primary\")};\r\n  }\r\n\r\n  .MuiInput-underline {\r\n    &:before {\r\n      border-bottom-color: ${cvar(\"primaryDark\")};\r\n    }\r\n\r\n    &:after {\r\n      border-bottom-color: ${cvar(\"primary\")};\r\n    }\r\n\r\n    &:hover:not(.Mui-disabled):before {\r\n      border-bottom-color: ${cvar(\"primaryLight\")};\r\n    }\r\n  }\r\n`\r\nconst SubmitButton = styled(Button)`\r\n  && {\r\n    font-size: ${cvar(\"title1\")};\r\n    color: ${cvar(\"primary\")};\r\n    border: 1px solid ${cvar(\"primaryDark\")};;\r\n    padding: .4rem 4rem;\r\n\r\n    &:hover {\r\n      border: 1px solid ${cvar(\"primaryLight\")};\r\n    }\r\n  }\r\n`\r\n\r\nexport default LoginForm;","import Login from \"./login.svg\";\n\nexport const illustration = {\n    Login\n};","export default __webpack_public_path__ + \"static/media/login.de02e679.svg\";","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport {cvar} from \"../../utils\";\r\nimport {illustration} from \"../../assets\";\r\nimport {Box} from \"@material-ui/core\";\r\n\r\nfunction Home() {\r\n    return (\r\n        <Container>\r\n            <HeadImage src={illustration.Login} alt=\"banner\"/>\r\n            <Box my=\"3rem\"/>\r\n            <LoginForm/>    \r\n        </Container>\r\n    );\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: ${cvar(\"background\")};\r\n`\r\n\r\nconst HeadImage = styled.img`\r\n  max-width: 80%;\r\n  max-height: 40%;\r\n`\r\n\r\nexport default Home;","import React from 'react';\r\nimport {GlobalStyles, Providers} from \"./components\";\r\nimport Home from \"./pages/home/Home\";\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <Providers>\r\n            <Home/>\r\n            <GlobalStyles/>\r\n        </Providers>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}